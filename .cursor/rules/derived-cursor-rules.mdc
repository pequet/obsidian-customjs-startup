---
description: AI rules derived by SpecStory from the project AI interaction history
globs: *,**/*
alwaysApply: false
---
# SpecStory Derived Rules - MINIMIZED

This file is automatically maintained by the SpecStory extension based on your chat history.

## ⚠️ CRITICAL REDUNDANCY NOTICE ⚠️

**IMPORTANT: Following Rule 270-avoid-redundancy.mdc, this file MUST NOT duplicate information that exists in other rule files.**

* **DO NOT** add content here that already exists in dedicated `.mdc` files
* **DO NOT** duplicate information from README.md or memory-bank documents
* **ALWAYS** create new dedicated rule files for new patterns instead of relying on this auto-generated file
* **REGULARLY** check and clear this file of any content that has been moved to dedicated rule files

See `000-rule-organization.mdc` for a complete index of all rule files and their purposes.

## Purpose

This file serves only as a placeholder for SpecStory to collect new insights that might emerge during future AI interactions. If you notice this file becoming populated with redundant information that already exists elsewhere, please clear it manually.

*Note: When establishing new AI behaviors or guidelines, always create a dedicated rule file rather than relying on this auto-generated one.*

## TECH STACK

* Vibe Tools (formerly cursor-tools)
* Node.js
* Repomix
* Playwright
* SpecStory (Cursor plugin)
* gemini-2.0-flash

## PROJECT DOCUMENTATION & CONTEXT SYSTEM

* `README.md` (Contains comprehensive Obsidian CustomJS Startup setup documentation)
* `memory-bank/` directory with all project context files
* `archives/` directory where to move content instead of deleting 
* `inbox/` directory for temporary content
* `PREFLIGHT.md` for deployment checklist
* `docs/` directory for project documentation
* `scripts/` directory organized by execution location

## PROJECT-SPECIFIC CONFIGURATIONS

None yet.

## DEBUGGING PROTOCOLS

* Never fabricate responses, tool outputs, or API responses
* Use direct MCP tool calls if `vibe-tools mcp run` encounters issues
* Always state when information is unknown or unavailable

## WORKFLOW & RELEASE RULES

* Use Sequential Thinking MCP tool for complex tasks
* Update Memory Bank files regularly
* Save vibe-tools outputs to `inbox/` following naming conventions
* Use system commands for all timestamps (never manual entry)
* Follow pre-flight checklist before GitHub pushes
* All shell scripts must adhere to the attribution standards in `290-script-attribution-standards.mdc`. 

## Vibe Tools Usage

* **`--with-doc` flag is intended for URLs, not local files. Local files are handled with Repomix.** 

## FRONTMATTER GUIDELINES

* A new general rule file `255-frontmatter-guidelines.mdc` was created to define frontmatter usage.
* `210-memory-bank.mdc` was updated to specify frontmatter for Memory Bank files.
* `280-inbox-file-naming.mdc` was updated to specify frontmatter for inbox files.